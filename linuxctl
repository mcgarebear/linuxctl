#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

# help writes usage information to the console.
help () {
  local -r executable=${1}
  cat << EOF
${executable} [flag..] subcommand

SYNOPSIS:
  linuxctl bootstraps your shell.

FLAGS:
  -h, --help
    Display usage and exit.

SUBCOMMANDS:
  init
  install
  update
EOF
}

# main is the entry point of the script. It returns zero upon successful
# execution. If an error was encountered during execution, it returns non-zero.
main () {
  local -r __file_path=$(realpath ${0})
  local -r __file_name=$(basename "${__file_path}")
  local -r __file_dir=$(dirname "${__file_path}")

  local subcommand=''

  while test $# -gt 0; do
    case "$1" in
      -h | --help)
        help "${__file_name}"
        return 0
        ;;
      *)
        subcommand="${1}"
        shift 1
        break
        ;;
    esac
  done

  if [[ -z "${subcommand}" ]]; then
    echo "Error: subcommand not provided"
    echo ""
    help "${__file_name}"
    return 1
  fi

  if ! [[ -f "${__file_dir}/${subcommand}" ]]; then
    echo "Error: nonexistent subcommand"
    echo ""
    help "${__file_name}"
    return 1
  fi

  # file exists matching subcommand, but it's not executable
  if ! [[ -x "${__file_dir}/${subcommand}" ]]; then
    echo "Error: nonexecutable subcommand"
    echo ""
    help "${__file_name}"
    return 1
  fi

  return "${__file_dir}/${subcommand}"
}

main $@
