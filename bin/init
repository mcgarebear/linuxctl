#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

# help writes usage information to the console.
help () {
  local -r executable=${1}
  cat << EOF
${executable} [flag..]

SYNOPSIS:
  init intitializes the system by configuring the home directory, shell, and
  prompt for the system.

FLAGS:
-h, --help
    Display usage and exit.
EOF
}

# main is the entry point of the script. It returns zero upon successful
# execution. If an error was encountered during execution, it returns non-zero.
main () {
  local -r __file_path=$(realpath $0)
  local -r __file_name=$(basename "${__file_path}")
  local -r __file_dir=$(dirname "${__file_path}")
  local -r __timestamp=$(date +"%Y%m%d-%H%M%S")

  while test $# -gt 0; do
    case "$1" in
      -h | --help)
        help "${__file_name}"
        return 0
        ;;
      *)
        break
        ;;
    esac
  done

  mkdir -p "${HOME}/bin"
  mkdir -p "${HOME}/.linuxctl"

  local -r config_dir=$(realpath "${__file_dir}/../config")

  cp --archive --recursive "${config_dir}/git/." "${HOME}"
  cp --archive --recursive "${config_dir}/home/." "${HOME}"
  cp --archive --recursive "${config_dir}/vim/." "${HOME}"

    (
      cat <<EOF
[[ -f "\${HOME}/.env" ]] && source "\${HOME}/.env"
EOF
  ) >> "${HOME}/.bash_profile"

  source "${HOME}/.bash_profile"

  return 0
}

main $@
